/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eindopdrachtbi6a;

import java.awt.Container;
import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * @Functie: applicatie die de overlap van interacties tussen mensen genen en HIV genen laat zien.
 * Deze overlap wordt gegeven in een VennDiagram, de gegevens van de genen of pubmed ID's kunnen naar een txt bestand worden geÃ«xporteerd
 *  
 * @author Daan
 * @version 1.4
 * @created on 29-1-2017
 * @last edited 5-2-2017
 * @known bugs:
 * Big O is vrij dramatisch
 */
public class GeneGui extends javax.swing.JFrame{
    
    public JFileChooser fileChooser;
    public File selectedFile = new File("");
    public static ArrayList<Gene> genesList = new ArrayList<>();
    public static ArrayList<Interacties> interactieList = new ArrayList<>();
    public static ArrayList<Interacties> overlapList3 = new ArrayList<>();
    
    /**
     * Creates new form GeneGui
     */
    public GeneGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("File:");

        jTextField1.setText("Bestandsnaam");

        jButton1.setText("Blader");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Open");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox1.setEditable(true);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1" }));

        jComboBox2.setEditable(true);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 2" }));

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
        );

        jButton3.setText("Export genes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Export PubMed");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Select types of interaction:");

        jButton5.setText("Draw");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5))))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(166, 166, 166))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(73, 73, 73)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * bladerbutton, venster verschijnt waarmee een bestand kan worden geselecteerd
     * bestand wordt opgeslagen in fileChooser.
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (evt.getSource()== jButton1){
            fileChooser = new JFileChooser();
            int reply = fileChooser.showOpenDialog(this);
            if (reply == JFileChooser.APPROVE_OPTION){
                selectedFile = fileChooser.getSelectedFile();
                jTextField1.setText(selectedFile.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * openbutton, met een druk op deze knop wordt het geselecteerde bestand geopend, hierbij wordt de methode 
     * openBestand aangeroepen. vervolgens verschijnen er wat statistieken in de jTextArea.
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            openBestand(selectedFile);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Tekenbutton, aangemaakt om te voorkomen dat elke keer als er een nieuwe selectie wordt gemaakt in de jCombobox,
     * dat de venndiagram ook meteen aanpast.
     * roept de methode overLap aan.
     * @param evt 
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        overlap();
    }//GEN-LAST:event_jButton5ActionPerformed
    /**
     * Met deze button wordt de methode aangeroepen om de informatie van de overlappende genen te exporteren
     * naar een .txt file.
     * roept de methode exportGenes aan.
     * @param evt 
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            exportGenes();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ItemEmptyException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * met deze button wordt de methode aangeroepen om de pubmed info van de overlappende genen te exporteren
     * naar een .txt file.
     * roept methode exportPubMed aan
     * @param evt 
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            exportPubMed();
        } catch (IOException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ItemEmptyException ex) {
            Logger.getLogger(GeneGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    public static BufferedReader inFile;
    
    /**
     * Methode die het geselecteerde bestand opent, en de regels split op \t.
     * in de arraylists worden twee objecten opgeslagen die in deze methode worden aangemaakt,
     * namelijk Gene en Interacties
     * daarnaast laat de methode wat statistieken zien over de dataset.
     * @param selectedFile
     * @throws FileNotFoundException
     * @throws IOException
     */
    public void openBestand(File selectedFile) throws FileNotFoundException, IOException{
        ArrayList<String> tID1 = new ArrayList<>();
        ArrayList<String> tID2 = new ArrayList<>();
        ArrayList<String> typeInteractions = new ArrayList<>();
        int interactionCount = 0;
        
        String line;
        inFile = new BufferedReader(new FileReader(selectedFile));
        while ((line = inFile.readLine()) != null){
            if (line.contains("#")==false){
            interactionCount++;
            String[] splittedRegel = line.split("\t");
            genesList.add(new Gene(Integer.parseInt(splittedRegel[1]), Integer.parseInt(splittedRegel[0]), splittedRegel[2], splittedRegel[3]));
            genesList.add(new Gene(Integer.parseInt(splittedRegel[6]), Integer.parseInt(splittedRegel[5]), splittedRegel[7], splittedRegel[8]));
            interactieList.add(new Interacties(splittedRegel[4], Integer.parseInt(splittedRegel[1]), Integer.parseInt(splittedRegel[5]), splittedRegel[9]));
            
            if (tID1.contains(splittedRegel[1])== false){
                tID1.add(splittedRegel[1]);
                }
            if (tID2.contains(splittedRegel[6])== false){
                tID2.add(splittedRegel[6]);
                }
            if (typeInteractions.contains(splittedRegel[4])== false){
                typeInteractions.add(splittedRegel[4]);
            }
            
        }
        }
        jTextArea1.append("Tax ID1: \t\t" + tID1.size() + " genes\n");
        jTextArea1.append("Tax ID2: \t\t" + tID2.size() + " genes\n");
        jTextArea1.append("#Interactions: \t\t" + interactionCount + " interactions\n");
        jTextArea1.append("#Types of interactions:\t" + typeInteractions.size() + " interactions\n");
        
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(typeInteractions.toArray()));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(typeInteractions.toArray()));
    }
    
    /**
     * methode die de overlap tussen genen bepaald met geselecteerde interacties.
     * roept de methode drawVenn aan, die de uiteindelijke venndiagram tekent.
     */
    public void overlap(){
        overlapList3.clear();
        
        HashSet<Integer> overlapList1 = new HashSet();
        HashSet<Integer> overlapList2 = new HashSet();
        
        for (int i=0;i<interactieList.size();i++){
            if (interactieList.get(i).getNaam().equals(jComboBox1.getSelectedItem())){
                if (overlapList1.contains(interactieList.get(i).getID1())==false){
                overlapList1.add(interactieList.get(i).getID1());
                }
            }
            if (interactieList.get(i).getNaam().equals(jComboBox2.getSelectedItem())){
                if (overlapList2.contains(interactieList.get(i).getID1())==false){
                    overlapList2.add(interactieList.get(i).getID1());
                }
            }
        }
        
        HashSet one = new HashSet(overlapList1);
        HashSet two = new HashSet(overlapList2);
        
        two.removeAll(overlapList1);
        one.removeAll(overlapList2);
        overlapList1.removeAll(one);
        overlapList2.removeAll(two);
        
        
        for (int j=0;j<interactieList.size();j++){
            if(overlapList1.contains(interactieList.get(j).getID1())){
                if (interactieList.get(j).getNaam().equals(jComboBox1.getSelectedItem()) || interactieList.get(j).getNaam().equals(jComboBox2.getSelectedItem())){
                    overlapList3.add(interactieList.get(j));
                }
                
            }
        }
        drawVenn(one.size(), two.size(), overlapList1.size() );
    
    }
    
    /**
     * methode die de venndiagram tekent, de cirkels zijn van vaste grote.
     * de getallen die in de venndiagram komen te staan zijn afkomstig van de methode overlap
     * @param len1
     * @param len2
     * @param lenOverlap
     */
    public void drawVenn(int len1, int len2, int lenOverlap){
        if (overlapList3.isEmpty()){
            JOptionPane.showMessageDialog(null, "Het is niet mogelijk overlap te bepalen");
        }
        else{
        String ddm1 = jComboBox1.getSelectedItem().toString();
        String ddm2 = jComboBox2.getSelectedItem().toString();
        
        
        Container window = getContentPane();
        window.add(jPanel1);
        Graphics g = jPanel1.getGraphics();
        g.clearRect(0, 0, 354, 167);
        
        
        g.drawString(ddm1, 65, 25);
        g.drawString(ddm2, 195, 25);
        
        g.drawOval(10, 35, 200, 100);
        g.drawOval(130, 35, 200, 100);
        
        g.drawString(Integer.toString(len1), 85, 90);
        g.drawString(Integer.toString(lenOverlap), 165, 90);
        g.drawString(Integer.toString(len2), 225, 90);
        }
    }
    /**
     * 
     * @throws FileNotFoundException
     * @throws IOException
     * @throws ItemEmptyException 
     */
    public void exportGenes() throws FileNotFoundException, IOException, ItemEmptyException{
        try{
            if (overlapList3.isEmpty()){
                JOptionPane.showMessageDialog(null, "Er is geen inhoud om te exporteren");
                throw new ItemEmptyException();
            }
            else{
                FileWriter writer = new FileWriter("Genes_Export.txt");
                for (int i = 0; i<overlapList3.size(); i++) {
                writer.write(overlapList3.get(i).getID1() +"\t"+ overlapList3.get(i).getID2() +"\t"+ overlapList3.get(i).getNaam() + "\n");
            }
            writer.close();
            }
            
        }catch(FileNotFoundException fnfe){
            System.out.println("Bestand niet kunnen vinden");
        }catch(IOException ioe){
            System.out.println("Kan het bestand niet wegschrijven");
        }
    }
    /**
     * 
     * @throws IOException
     * @throws ItemEmptyException 
     */
    public void exportPubMed() throws IOException, ItemEmptyException{
        try{
            if (overlapList3.isEmpty()){
                JOptionPane.showMessageDialog(null, "Er is geen inhoud om te exporteren");
                throw new ItemEmptyException();
            }
            
            FileWriter writer = new FileWriter("PubMed_Export.txt\n");
            for (int i = 0; i<overlapList3.size();i++){
                writer.write(overlapList3.get(i).getPubMed());
            }
            writer.close();
        }catch(FileNotFoundException fnfe){
            System.out.println("Bestand niet kunnen vinden");
        }catch(IOException ioe){
            System.out.println("Kan het bestand niet wegschrijven");
        }
    }
    
    /**
     * Main methode, van hieruit wordt de Gui aangeroepen en zichtbaar gemaakt.
     * @param args
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
